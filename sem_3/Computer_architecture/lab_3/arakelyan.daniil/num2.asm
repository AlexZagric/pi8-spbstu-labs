DOSSEG
.MODEL SMALL
.STACK 100h
.DATA
  A db 0,1,2,3,4,5,6,7,8,9
  B db 0,0,0,0,0,0,0,0,0,0
  moveEndMessage db 'Data moved from A to B$'
  arrayPrintMessage db 'Data in array B: $'

.CODE
start:
  mov ax, @data ; загружаем адрес сегмента данных в регистр ax. из data в ax
  mov ds, ax ; загружаем ax в регистр сегмента данных ds (dsta segment)
  mov es, ax ; загружаем ax в регистр сегмента данных es (external segment)

  cld ; как во второй лабе, перессылка
  lea si, A
  lea di, B
  mov cx, 10
  rep movsb

  mov ah, 09h ; 09h - функ-я, которая отвечает за вывод строки.
  lea dx, moveEndMessage ; закидываем адрес строки с сообщеншием в регистр DX (lea - load effective addres)
  int 21h ; программное прерывание 21h вызывает набор функций DOS (у нас тут вывод строки, адрес которой в регистре DX)

  mov dl, 0Dh ; перемещаем курсор в начало
  mov ah, 02h ; выводим символ
  int 21h

  mov dl, 0Ah ; символ перевода строки
  mov ah, 02h ; выводим этот символ 
  int 21h

  ; т е мы перешли в начало строки, а потом спустились на строку ниже

  mov ah, 09h ; выкидываем сообщение об окончании перессылки как в первом пункте вывод сообщения
  lea dx, arrayPrintMessage ; используется функция вывода строки, а затем прерываение, которое вызывает вывод
  int 21h

  mov cx, 10
  lea si, B

print_loop:

  mov al, [si] ; преобразование числа в ascii код. вот у нас в al 5.
  add al, '0' ; тут добавляем '0' = 30h (hex) и получается так, что у нас в al: 5 + 30h = 35h, а это число 5 в ascii таблице 
  mov dl, al ; тут копируем в dl. dl используем для передачи данных в функцию вывода BIOS
  mov ah, 02h ; закидываем в ah функцию для вывода одного символа на экран. а символ как раз в dl
  int 21h ; программное прерывание, "в котором" функция вывода одного символа

  mov dl, ' ' ; для вывода пробела после вывода числа
  mov ah, 02h
  int 21h

  inc si ; увеличиваем значение si для перехода к сл элементу массива
  loop print_loop ; looooooooooooop

  mov ax, 4C00h ; функция завершения программы 
  int 21h ; программное прерывание, "в котором" функция завершения программы

END start ; конец