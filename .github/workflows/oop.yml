name: Check OOP lab

on:
  pull_request:

jobs:
  check-dirs:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.changes.outputs.dirs }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v4

      - name: Determine changed directories
        id: changes
        run: |
          if [ $GITHUB_BASE_REF ]; then
            git fetch origin ${{ github.base_ref }} ${{ github.event.pull_request.head.ref }}
            FORK_POINT=$( git show-branch --merge-base "origin/${{ github.base_ref }}" "origin/${{ github.event.pull_request.head.ref }}" )
            LATEST_COMMIT_IN_PR=${{ github.event.pull_request.head.sha }}
            CHANGED_DIRS=$(git diff --name-only $FORK_POINT $LATEST_COMMIT_IN_PR | grep -E '^OOP/lab_[0-9]+/[a-zA-Z.]+/|^OOP/practice_[0-9]+/[a-zA-Z.]+/' | cut -d'/' -f1,2,3 | sort -u)
          else
            CHANGED_DIRS=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -E '^OOP/lab_[0-9]+/[a-zA-Z.]+/|^OOP/practice_[0-9]+/[a-zA-Z.]+/' | cut -d'/' -f1,2,3 | sort -u)
            echo "Changes for PUSH" 
            echo "Diff between ${{ github.event.before }} and ${{ github.event.after }}"
          fi

          if [ -n "$CHANGED_DIRS" ]; then
            echo "Changed directories: $CHANGED_DIRS"
            echo "dirs=$CHANGED_DIRS" >> $GITHUB_OUTPUT
          else
            echo "No relevant changes found"
            exit 0
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-dirs
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
      
      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build each lab with Gradle
        run: |
          for DIR in ${{ needs.check-dirs.outputs.dirs }}; do
            echo "Running build in $DIR"
            cd $DIR
            gradle build
            cd ${{ github.workspace }}
          done
